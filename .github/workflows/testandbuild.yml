# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: Node.js build and android build test

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:

    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
    - uses: actions/checkout@v3
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    - name: .env setting
    - run: |
          echo "BACKEND_API_URL=${{ secrets.BACKEND_API_URL }}" >> .env
          echo "NAVER_CONSUMER_SECRET=${{ secrets.NAVER_CONSUMER_SECRET }}" >> .env
          echo "NAVER_LOGIN_CONSUMER_KEY=${{ secrets.NAVER_LOGIN_CONSUMER_KEY }}" >> .env
          echo "NAVER_MAP_API_ID=${{ secrets.NAVER_MAP_API_ID }}" >> .env
          echo "NAVER_MAP_API_KEY=${{ secrets.NAVER_MAP_API_KEY }}" >> .env
          echo "S3_ACCESSKEY_ID=${{ secrets.S3_ACCESSKEY_ID }}" >> .env
          echo "S3_BUCKET_NAME=${{ secrets.S3_BUCKET_NAME }}" >> .env
          echo "S3_SECRET_ACCESSKEY=${{ secrets.S3_SECRET_ACCESSKEY }}" >> .env
    - run: npm ci
    - run: npm run build --if-present
    - run: npm test
    - run: cd android && chmod +x gradlew && ./gradlew
    
